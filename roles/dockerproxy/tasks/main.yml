---
- name: Create the dockerproxy network
  community.general.docker_network:
    name: socket_proxy
    internal: false

- name: Make sure the dockerproxt container is created and running
  register: dockerproxy_result
  retries: 5
  until: dockerproxy_result is succeeded
  community.general.docker_container:
    name: "dockerproxy"
    image: "ghcr.io/tecnativa/docker-socket-proxy:{{ dockerproxy_version }}"
    pull: yes
    env:
      "LOG_LEVEL": "info" # debug,info,notice,warning,err,crit,alert,emerg
      ## Variables match the URL prefix (i.e. AUTH blocks access to /auth/* parts of the API, etc.).
      # 0 to revoke access.
      # 1 to grant access.
      ## Granted by Default
      "EVENTS": "1"
      "PING": "1"
      "VERSION": "1"
      ## Revoked by Default
      # Security critical
      "AUTH": "0"
      "SECRETS": "0"
      "POST": "1" # Watchtower
      # Not always needed
      "BUILD": "0"
      "COMMIT": "0"
      "CONFIGS": "0"
      "CONTAINERS": "1" # Traefik, portainer, etc.
      "DISTRIBUTION": "0"
      "EXEC": "0"
      "IMAGES": "1" # Portainer
      "INFO": "1" # Portainer
      "NETWORKS": "1" # Portainer
      "NODES": "0"
      "PLUGINS": "0"
      "SERVICES": "1" # Portainer
      "SESSION": "0"
      "SWARM": "0"
      "SYSTEM": "0"
      "TASKS": "1" # Portainer
      "VOLUMES": "1" # Portainer
    ports:
      - 127.0.0.1:2375:2375
    state: "started"
    networks:
      - name: socket_proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart_policy: unless-stopped

- name: Add to env vars
  ansible.builtin.lineinfile:
    path: /etc/environment
    line: "DOCKER_HOST=tcp://socket-proxy:2375"
