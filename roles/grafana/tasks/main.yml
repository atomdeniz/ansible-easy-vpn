---
- name: Create prometheus directory
  ansible.builtin.file:
    path: "/etc/prometheus/"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"

- name: Create prometheus.yml file
  ansible.builtin.copy:
    content: |
      global:
        scrape_interval: 15s
      scrape_configs:
        - job_name: 'prometheus'
          scrape_interval: 5s
          static_configs:
            - targets: ['localhost:9090']
        - job_name: 'node_exporter'
          static_configs:
            - targets: ['node_exporter:9100']
        - job_name: 'cadvisor'
          static_configs:
            - targets: ['cadvisor:8080']
    dest: /etc/prometheus/prometheus.yml
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"

- name: Create volumes for monitoring containers
  community.docker.docker_volume:
    name: "{{ item }}"
    state: present
    driver: local
  loop:
    - prometheus-data
    - grafana-data

- name: Create prometheus container
  community.docker.docker_container:
    name: prometheus
    image: prom/prometheus:{{ prometheus_version }}
    pull: true
    state: started
    volumes:
      - /etc/prometheus/:/etc/prometheus/
      - prometheus-data:/prometheus
    restart_policy: unless-stopped
    command: "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - name: homelab
        ipv4_address: 10.8.2.15

- name: Create node exporter container
  community.docker.docker_container:
    name: node_exporter
    image: quay.io/prometheus/node-exporter:{{ node_exporter_version}}
    pull: true
    state: started
    pid_mode: host
    restart_policy: unless-stopped
    command: "--path.rootfs=/host"
    volumes:
      - /:/host:ro,rslave
    networks:
      - name: homelab
        ipv4_address: 10.8.2.16

- name: Get cadvisor latest release
  community.general.github_release:
    user: google
    repo: cadvisor
    action: latest_release
  register: cadvisor_latest_release

- name: Create cadvisor container
  community.docker.docker_container:
    name: cadvisor
    image: gcr.io/cadvisor/cadvisor:{{ cadvisor_latest_release.tag }}
    pull: true
    state: started
    restart_policy: unless-stopped
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    networks:
      - name: homelab
        ipv4_address: 10.8.2.17

- name: Create grafana container
  community.docker.docker_container:
    name: grafana
    image: grafana/grafana-oss:{{ grafana_version }}
    pull: true
    state: started
    restart_policy: unless-stopped
    volumes:
      - "{{ docker_dir }}/grafana-data:/var/lib/grafana"
    networks:
      - name: homelab
        ipv4_address: 10.8.2.18
    labels:
      traefik.enable: "true"
      traefik.http.routers.grafana.entrypoints: "http"
      traefik.http.routers.grafana.rule: "Host(`{{ grafana_host }}`)"
      traefik.http.middlewares.grafana-https-redirect.redirectscheme.scheme: "https"
      traefik.http.routers.grafana.middlewares: "grafana-https-redirect"
      traefik.http.routers.grafana-secure.entrypoints: "https"
      traefik.http.routers.grafana-secure.rule: "Host(`{{ grafana_host }}`)"
      traefik.http.routers.grafana-secure.tls: "true"
      traefik.http.routers.grafana-secure.service: "grafana"
      traefik.http.routers.grafana-secure.middlewares: "authelia@docker"
      traefik.http.services.grafana.loadbalancer.server.port: "3000"
      traefik.docker.network: "homelab"
